@page "/projectOverview"
@using ResourceMaster.Services.CustomerService
@using ResourceMaster.ViewModels
@using MudBlazor
@inject ProjectService ProjectService;
@inject NavigationManager UriHelper
@inject NavigationManager NavigationManager

<MudText Typo="Typo.h6">Project Overview</MudText>
<MudDataGrid T="ProjectViewModel" Items="@projects" SortMode="SortMode.Multiple" QuickFilter="@_quickFilter">
    <ToolBarContent>
        <MudButton OnClick="@GoToNewProject" Variant="Variant.Filled" Color="Color.Primary">Add Item</MudButton>
        <MudSpacer />
        <MudTextField @bind-Value="filter" Placeholder="Filter" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <Columns>
        <PropertyColumn Property="x => x.ProjectName" Title="Project name" />
        <PropertyColumn Property="x => x.ProjectStart" Title="Project start" Format="dd/MM/yyyy" />
        <PropertyColumn Property="x => x.ProjectEnd" Title="Project end" Format="dd/MM/yyyy" />
        <TemplateColumn StickyRight="true" CellStyle="width:10px">
            <CellTemplate >
                <MudIconButton Icon="@Icons.Material.Outlined.Edit" Size="@Size.Small" />
            </CellTemplate>
        </TemplateColumn>
        <TemplateColumn StickyRight="true" CellStyle="width:10px">
            <CellTemplate>
                <MudIconButton Icon="@Icons.Material.Outlined.Delete" Size="@Size.Small" />
            </CellTemplate>
        </TemplateColumn>
        <TemplateColumn StickyRight="true" CellStyle="width:10px">
            <CellTemplate>
                <MudIconButton Icon="@Icons.Material.Outlined.ConnectWithoutContact" Size="@Size.Small" />
            </CellTemplate>
        </TemplateColumn>
    </Columns>
    <PagerContent>
        <MudDataGridPager T="ProjectViewModel" />
    </PagerContent>
</MudDataGrid>

@code {
    private string filter = "";
    private IEnumerable<ProjectViewModel> projects = new List<ProjectViewModel>();

    private Func<ProjectViewModel, bool> _quickFilter => x =>
    {
        if (string.IsNullOrWhiteSpace(filter))
            return true;

        if (x.ProjectName.Contains(filter, StringComparison.OrdinalIgnoreCase))
            return true;

        if (x.ProjectStart != null && x.ProjectStart.ToString().Contains(filter, StringComparison.OrdinalIgnoreCase))
            return true;

        if (x.ProjectEnd != null && x.ProjectEnd.ToString().Contains(filter, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    };

    void GoToNewProject()
    {
        NavigationManager.NavigateTo("/createProject");
    }

    protected override async Task OnInitializedAsync()
    {
        projects = await ProjectService.GetAllAsync();
    }
}
