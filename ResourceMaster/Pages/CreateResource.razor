@page "/createResource"
@using ResourceMaster.ViewModels
@using MudBlazor
@using ResourceMaster.Services.CustomerService
@inject ISnackbar Snackbar;
@inject ResourceService ResourceService;

<h1>Create new applicant</h1>
<br>
<MudForm onsubmit="@HandleSubmit" Model="_resource">
    <MudStack Row="true" Spacing="4" AlignItems="AlignItems.Stretch">
        <!-- Person -->
        <MudStack Style="margin-right: 32px; min-width: 300px; height: 100%">
            <MudPaper Class="pa-4">
                <MudStack Row="true">
                    <MudAvatar Image="/person.jpg" Size="Size.Large" />
                    <MudStack Justify="Justify.Center" Spacing="0">
                        <MudText Class="resource-header">Applicant</MudText>
                    </MudStack>
                </MudStack>
            </MudPaper>

            <MudPaper Class="pa-4">
                <MudStack Row="true" Spacing="4" Grow="1">
                    <MudStack Spacing="4" Class="flex-grow">
                        <MudStack Row="true">
                            <MudTextField @bind-Value="_resource.firstName" Label="First name" id="firstname" Variant="Variant.Outlined"/>
                            <MudTextField @bind-Value="_resource.lastName" Label="Last name" id="lastname" Variant="Variant.Outlined"/>
                        </MudStack>
                        <MudTextField @bind-Value="_resource.age" Label="Age" id="age" Variant="Variant.Outlined" Min="0" Max="99"/>
                    </MudStack>
                </MudStack>
            </MudPaper>
        </MudStack>

        <!-- Skills -->
        <MudStack Style="width: 100%; height: 100%">
            <MudPaper Class="pa-4">
                <MudStack Row="true">
                    <MudAvatar Image="/skill.jpg" Size="Size.Large" />
                    <MudStack Justify="Justify.Center" Spacing="0">
                        <MudText Class="resource-header">Skill</MudText>
                    </MudStack>
                </MudStack>
            </MudPaper>
    
            <MudPaper Class="pa-4">
                <MudStack Spacing="4" Class="flex-grow">
                    <MudStack Row="true" Spacing="4">
                        <MudSelect Label="Skill" T="string" @bind-Value="selectedSkill">
                            @foreach (var skillOption in skillOptions)
                            {
                                <MudSelectItem Value="@skillOption"/>
                            }
                        </MudSelect>
                        <MudSelect Label="Skill Level" T="string" @bind-Value="selectedLevel">
                            @foreach (var levelOption in levelOptions)
                            {
                                <MudSelectItem Value="@levelOption"/>
                            }
                        </MudSelect>
                        <MudCheckBox @bind-Checked="isCertified" Label="Certified"/>
                    </MudStack>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="AddSkill">Add Skill</MudButton>
                </MudStack>
            </MudPaper>
        </MudStack>
    </MudStack>
    <MudList>
            @foreach (var skill in skills)
            {
                <MudListItem>
                    <MudGrid>
                        <MudItem xs="12" sm="4" md="3">
                            <MudText><b>Skill:</b> @skill.SkillName | <b>Level:</b> @skill.Level | <b>Certified:</b> @(skill.Certified ? "Yes" : "No")</MudText>
                        </MudItem>
                        <MudItem xs="12" sm="4" md="3">
                            <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="@(() => RemoveSkill(skill))">Delete</MudButton>
                        </MudItem>
                    </MudGrid>
                </MudListItem>
                <MudDivider />
            }
        </MudList>
    <MudGrid>
        <MudItem xs="12" Class="my-4 text-center">
            <MudButton Variant="Variant.Filled"
                       Size="Size.Large"
                       Color="Color.Primary"
                       ButtonType="ButtonType.Submit">
                Add applicant
            </MudButton>
        </MudItem>
    </MudGrid>
</MudForm>

@code{
    private ResourceViewModel _resource = new();

    private async Task HandleSubmit()
    {
        await ResourceService.AddAsync(_resource);
        Snackbar.Add("Successfully added " + _resource.firstName + " " + _resource.lastName);
    }

}

@code {
    private List<Countries> _countries = Enum.GetValues<Countries>().ToList();

    private async Task<IEnumerable<Countries>> FilterCountries(string value)
    {
        if (string.IsNullOrEmpty(value))
        {
            return _countries;
        }

        return await Task.FromResult(_countries.FilterByDisplayName(value));
    }

}

@code {
    private List<string> skillOptions = new List<string> { "Java", "C#", "Databases" };
    private List<string> levelOptions = new List<string> { "Poor", "Mediocre", "God" };
    private string selectedSkill = "Java";
    private string selectedLevel = "Poor";
    private bool isCertified;

    private List<SkillModel> skills = new();

    private void AddSkill()
    {
        if (!string.IsNullOrEmpty(selectedSkill) && !string.IsNullOrEmpty(selectedLevel))
        {
            skills.Add(new SkillModel { SkillName = selectedSkill, Level = selectedLevel, Certified = isCertified });
        }
    }

    private void RemoveSkill(SkillModel skill)
    {
        skills.Remove(skill);
    }

    public class SkillModel
    {
        public string SkillName { get; set; }
        public string Level { get; set; }
        public bool Certified { get; set; }
    }
}
