@page "/dummy"
@using MudBlazor
@using ResourceMaster.Services.CustomerService;
@using ResourceMaster.ViewModels;
@inject CustomerService CustomerService;

<h1>My Table</h1>

<MudGrid Spacing="2" Justify="Justify.Center">
    <MudItem xs="8">
        <MudPaper>
            <MudSimpleTable Style="overflow-x: auto;">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Age</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in myTableList)
                    {
                        <tr>
                            <td>@item.Id</td>
                            <td>@item.Age</td>
                        </tr>
                    }
                </tbody>
            </MudSimpleTable>
            </MudPaper>
    </MudItem>
    <MudItem xs="4">
        <MudForm Model="@newItem" OnValidSubmit="@HandleSubmit()">
                <MudTextField @bind-Value="newItem.Age" Immediate="true" Label="Age" />
                <MudPaper Class="pa-4 mt-4">
                    <MudButton Variant="Variant.Filled" ButtonType="ButtonType.Submit" Color="Color.Primary" Class="ml-auto">Enter</MudButton>
                </MudPaper>
                
            </MudForm>
    </MudItem>
</MudGrid>


@code{
    private List<MyTableViewModel> myTableList = new List<MyTableViewModel>();
    private MyTableViewModel newItem = new MyTableViewModel();

    protected override async Task OnInitializedAsync()
    {
        myTableList = (await CustomerService.GetAllAsync()).ToList();
    }

    private async Task HandleSubmit()
    {
        await CustomerService.AddAsync(newItem);
        newItem = new MyTableViewModel();
        myTableList = (await CustomerService.GetAllAsync()).ToList();
    }

}
