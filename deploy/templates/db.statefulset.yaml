apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.db.name }}-statefulset
  namespace: {{ .Values.namespace }}
spec:
  serviceName: {{ .Values.db.name }}-statefulset
  selector:
    matchLabels:
      app: {{ .Values.db.name }}-statefulset
  replicas: 1
  revisionHistoryLimit: 2
  template:
    metadata:
      labels:
        app: {{ .Values.db.name }}-statefulset
    spec:
      containers:
      - name: {{ .Values.db.name }}-statefulset
        image: postgres:15
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: 512Mi
            cpu: 0.5
          requests:
            memory: 256Mi
            cpu: 0.3
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.db.name }}-creds
              key: user
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: {{ .Values.db.name }}-creds
              key: db
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.db.name }}-creds
              key: password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: 5432
          name: http
        volumeMounts:
        - name: pg-persistent-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: pg-persistent-storage
        persistentVolumeClaim:
          claimName: {{ .Values.db.name }}-pvc
