// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ResourceMaster.DAL.Data;

#nullable disable

namespace ResourceMaster.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ResourceMaster.DAL.Models.Customer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("companyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("zipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ResourceMaster.DAL.Models.Project", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("customerid")
                        .HasColumnType("integer");

                    b.Property<DateTime>("projectEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("projectName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("projectStart")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("workForce")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("customerid");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ResourceMaster.DAL.Models.Resource", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("age")
                        .HasColumnType("integer");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("zipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("ResourceMaster.DAL.Models.Skill", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("Projectid")
                        .HasColumnType("integer");

                    b.Property<int?>("Resourceid")
                        .HasColumnType("integer");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isCertification")
                        .HasColumnType("boolean");

                    b.Property<string>("necessity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("skillLevel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("Projectid");

                    b.HasIndex("Resourceid");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("ResourceMaster.DAL.Models.Project", b =>
                {
                    b.HasOne("ResourceMaster.DAL.Models.Customer", "customer")
                        .WithMany()
                        .HasForeignKey("customerid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");
                });

            modelBuilder.Entity("ResourceMaster.DAL.Models.Skill", b =>
                {
                    b.HasOne("ResourceMaster.DAL.Models.Project", null)
                        .WithMany("skills")
                        .HasForeignKey("Projectid");

                    b.HasOne("ResourceMaster.DAL.Models.Resource", null)
                        .WithMany("skills")
                        .HasForeignKey("Resourceid");
                });

            modelBuilder.Entity("ResourceMaster.DAL.Models.Project", b =>
                {
                    b.Navigation("skills");
                });

            modelBuilder.Entity("ResourceMaster.DAL.Models.Resource", b =>
                {
                    b.Navigation("skills");
                });
#pragma warning restore 612, 618
        }
    }
}
